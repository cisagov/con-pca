name: Deploy
on:
  push:
    branches: [develop]
  repository_dispatch:
    types: [deploy]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_URI: ${{ secrets.ECR_URI }}
  REGION: us-east-1
jobs:
  build_web:
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: con-pca-web
    steps:
      - uses: actions/checkout@v2
        with:
          repository: cisagov/con-pca-web
      - name: Get Tag
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:0:10})
      - name: Print Tag
        run: echo ${{steps.vars.outputs.tag}}
      - name: Print Env
        run: env
    #   - name: Build Docker Image
    #     run: docker build -t $IMAGE_REPO:${{steps.vars.outputs.tag}} .
    #   - name: Tag Docker Image
    #     run: docker tag $IMAGE_REPO:${{steps.vars.outputs.tag}} $ECR_URI:${{steps.vars.outputs.tag}}
    #   - name: ECR Login
    #     run: aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_URI
    #   - name: Push Docker Image
    #     run: docker push $ECR_URI:${{steps.vars.outputs.tag}}

  build_api:
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: con-pca-api
    steps:
      - uses: actions/checkout@v2
        with:
          repository: cisagov/con-pca-api
      - name: Get Tag
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:0:10})
      - name: Print Tag
        run: echo ${{steps.vars.outputs.tag}}
      - name: Print Env
        run: env
    #   - name: Build Docker Image
    #     run: docker build -t $IMAGE_REPO:${{steps.vars.outputs.tag}} .
    #   - name: Tag Docker Image
    #     run: docker tag $IMAGE_REPO:${{steps.vars.outputs.tag}} $ECR_URI:${{steps.vars.outputs.tag}}
    #   - name: ECR Login
    #     run: aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_URI
    #   - name: Push Docker Image
    #     run: docker push $ECR_URI:${{steps.vars.outputs.tag}}

  build_gophish:
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: con-pca-gophish
    steps:
      - uses: actions/checkout@v2
        with:
          repository: cisagov/con-pca-gophish
      - name: Get Tag
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:0:10})
      - name: Print Tag
        run: echo ${{steps.vars.outputs.tag}}
      - name: Print Env
        run: env
    #   - name: Build Docker Image
    #     run: docker build -t $IMAGE_REPO:${{steps.vars.outputs.tag}} .
    #   - name: Tag Docker Image
    #     run: docker tag $IMAGE_REPO:${{steps.vars.outputs.tag}} $ECR_URI:${{steps.vars.outputs.tag}}
    #   - name: ECR Login
    #     run: aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_URI
    #   - name: Push Docker Image
    #     run: docker push $ECR_URI:${{steps.vars.outputs.tag}}

  terraform:
    runs-on: ubuntu-latest
    needs: [build_web, build_api, build_gophish]
    steps:
      - name: Test
        run: echo "test"
